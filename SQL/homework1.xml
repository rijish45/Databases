<?xml version="1.0" encoding="UTF-8"?>


<homework>
<item>
	<id>q1a</id>
	<question> Count the number of tuples in Inproceedings </question>
	<sql> <![CDATA[ SELECT COUNT(*) AS cnt
		            FROM inproceedings
	]]> </sql>
    <result>
        2224099
    </result>
</item>
<item>
	<id>q1b</id>
	<question> Count the number of tuples in Article </question>
	<sql><![CDATA[
        SELECT COUNT(*) AS cnt
        FROM article
	]]></sql>
    <result>
       1866974
    </result>
</item>
<item>
	<id>q1c</id>
	<question> Count the number of tuples in Authorship </question>
	<sql><![CDATA[
        SELECT COUNT(*) as cnt
        FROM authorship
	]]></sql>
    <result>
     12172735        
    </result>
</item>
<item>
	<id>q2a</id>
	<question> Add a column "Area" in the Inproceedings table. </question>
	<sql><![CDATA[
		ALTER TABLE inproceedings
        ADD "Area" TEXT
	]]></sql>
    <result>
        ß
    </result>
</item>
<item>
    <id> q2b </id>
    <question>
        Populate the column 'Area' with the values from the above table if there is a match, otherwise set it to 'UNKNOWN'"
    </question>
    <sql><![CDATA[
        UPDATE inproceedings
        SET "Area" = 'Database'
        WHERE booktitle IN ('SIGMOD Conference', 'VLDB', 'ICDE', 'PODS')

        UPDATE inproceedings
        SET "Area" = 'Theory'
        WHERE booktitle IN ('STOC', 'FOCS', 'SODA', 'ICALP')


        UPDATE inproceedings
        SET "Area" = 'Systems'
        WHERE booktitle IN ('SIGCOMM', 'ISCA', 'HPCA', 'PLDI')


        UPDATE inproceedings
        SET "Area" = 'ML-AI'
        WHERE booktitle IN ('ICML', 'NIPS', 'AAAI', 'IJCAI')

        UPDATE inproceedings
        SET "Area" = 'Unknown'
        WHERE booktitle NOT IN ('STOC', 'FOCS', 'SODA', 'ICALP', 'SIGCOMM', 'ISCA', 'HPCA', 'PLDI', SIGMOD Conference', 'VLDB', 'ICDE', 'PODS', 'ICML', 'NIPS', 'AAAI', 'IJCAI')

	]]></sql>
    <result>
        NO RESULT TO DISPLAY
    </result>
</item>
<item>
	<id>q3a</id>
	<question>Find the number of papers in each area above.</question>
	<sql><![CDATA[
    
     SELECT COUNT(title), I."Area"
     FROM inproceedings I
     WHERE (NOT (I."Area"='Unknown')) 
     GROUP BY I."Area"
        
        
]]></sql>
    <result>
        Database - 11259
        Theory - 12051
        Systems - 5367
        ML-AI -  28454
    </result>
</item>
<item>
	<id>q3b</id>
	<question>Find the TOP-20 authors who published the most number of papers in "Database" (author published in multiple areas will be counted in all those areas)</question>
	<sql><![CDATA[
        SELECT  COUNT(title), author
        FROM authorship A, inproceedings I
        WHERE I."Area" = 'Database' AND A.pubkey = I.pubkey
        GROUP BY A.author
        ORDER BY COUNT(title) DESC
        LIMIT 20
	]]></sql>
	<result>
        
        142,"Divesh Srivastava"
        121,"Surajit Chaudhuri"
        109,"Jiawei Han 0001"
        107,"Jeffrey F. Naughton"
        106,"Philip S. Yu"
        105,"H. V. Jagadish"
        103,"Hector Garcia-Molina"
        98,"Raghu Ramakrishnan"
        92,"Beng Chin Ooi"
        90,"Michael Stonebraker"
        87,"Kian-Lee Tan"
        82,"Michael J. Carey 0001"
        81,"Rakesh Agrawal 0001"
        80,"Nick Koudas"
        79,"David J. DeWitt"
        76,"Michael J. Franklin"
        75,"Jeffrey Xu Yu"
        75,"Christos Faloutsos"
        74,"Dan Suciu"
        72,"Gerhard Weikum"
	</result>
</item>
<item>
	<id>q3c</id>
	<question>Find the number of authors who published in exactly two of the four areas (do not consider UNKNOWN). </question>
	<sql><![CDATA[
        SELECT COUNT( DISTINCT author) 
        FROM authorship A
        WHERE author IN
        (SELECT author
        FROM authorship A
        JOIN inproceedings I ON
        I.pubkey = A.pubkey
        WHERE "Area" != 'Unknown'
        GROUP BY author 
        HAVING COUNT(DISTINCT "Area") = 2
        )
	]]></sql>
    <result>
        3756
    </result>
</item>
<item>
	<id>q3d</id>
    <question>Find the number of authors who wrote more journal papers than conference papers (irrespective of research areas).</question>
	<sql><![CDATA[
         WITH journals AS
         (SELECT author, COUNT(title) AS number
         FROM authorship A
         INNER JOIN article R ON A.pubkey = R.pubkey
         GROUP BY author),
         conferences AS
         (SELECT author, COUNT(title) AS number
         FROM authorship A
         INNER JOIN inproceedings I ON A.pubkey = I.pubkey
         GROUP BY author)
         SELECT COUNT(*) AS cnt
         FROM journals LEFT OUTER JOIN conferences on conferences.author = journals.author
         WHERE journals.number > conferences.number or conferences.number IS NULL



	]]></sql>
    <result>
     879255
    </result>
</item>
<item>
	<id>q3e</id>
	<question>Find the top-5 authors who published the maximum number of papers (journal OR conference) since 2000, among the authors who have published at least one "Database" paper (in a conference).</question>
	<sql><![CDATA[
     WITH R1 AS
     (SELECT DISTINCT a.author, a.pubkey
     FROM authorship a, inproceedings i
     WHERE i."Area" = 'Database' AND i.pubkey = a.pubkey)
     SELECT R2.author, COUNT(*) AS cnt 
     FROM
     (SELECT R1.pubkey, R1.author
     FROM R1, inproceedings I
     WHERE R1.pubkey = I.pubkey AND I.year >= 2000
     UNION
     SELECT R1.pubkey, R1.author
     FROM R1, article A
     WHERE R1.pubkey = A.pubkey AND A.year >= 2000
     ) AS R2
     GROUP BY R2.author
     ORDER BY count(*) DESC, R2.author
     LIMIT 5

	]]></sql>
	<result>
        "Divesh Srivastava",118
        "Surajit Chaudhuri",90
        "Jiawei Han 0001",85
        "Beng Chin Ooi",80
        "Kian-Lee Tan",76
	</result>
</item>
<item>
	<id>q4a</id>
	<question>
		Plot a linegraph with two lines, one for the number of journal papers and the other for the number of conference paper in every decade starting from 1950. Therefore the decades will be 1950-1959, 1960-1969, ...., 2000-2009, 2010-2015.
	</question>
	<sql><![CDATA[
     WITH Article_DEC AS
     (SELECT(A.year/10 * 10) AS decade, COUNT(A.pubkey) AS c1
     FROM article A
     WHERE A.year >= 1950
     GROUP BY decade),
     Inproc_Dec AS
     (SELECT (I.year/10 * 10) AS decade, COUNT(I.pubkey) AS c2
     FROM inproceedings I
     WHERE I.year >= 1950
     GROUP BY decade)

     SELECT A.decade, c1, c2
     FROM Article_DEC A INNER JOIN Inproc_DEC I 
     ON A.decade = I.decade
        
	]]></sql>
	<result>

        1950,1625,80
        1960,8948,1753
        1970,26862,12646
        1980,66134,51937
        1990,194400,217509
        2000,540349,785232
        2010,1028464,1154942
	
    </result>
</item>
<item>
	<id>q4b</id>
	<question>
	/* Q4b.
	 * Plot a barchart showing how the average number of collaborators varied in
	 * these decades for conference papers in each of the four areas in Q3.
	 * Again, the decades will be 1950-1959, 1960-1969, ...., 2000-2009, 2010-2015.
	 * But for every decade, there will be four bars one for each area (do not
	 * consider UNKNOWN), the height of the bars will denote the average number of
	 * collaborators. */
	</question>
	<sql><![CDATA[
        ???
	]]></sql>
	<result>
        ???
	</result>
</item>
<item>
	<id>ßq4c</id>
	<question>
	/*
	 * Q4c.
	 * plot a barchart showing the average number of coauthors in decades and areas
	 */
	</question>
	<sql><![CDATA[
        
        WITH num_author AS
        (SELECT(year/10 *10) AS Decade, COUNT(author) AS auth, I."Area"AS area, I.pubkey
        FROM inproceedings I INNER JOIN authorship A
        ON A.pubkey = I.pubkey
        WHERE I."Area" <> 'Unknown' AND I.year >= 1950
        GROUP BY Decade, I."Area", I.pubkey)

        SELECT N.decade,AVG(auth), N.area
        FROM num_author N
        GROUP BY N.area, decade
        ORDER BY N.Decade DESC
        
	]]></sql>
	<result>
               2010,4.02915549597855,"Database"
               2010,4.54414682539683,"Systems"
               2010,3.36719225823916,"ML-AI"
               2010,2.773390036452,"Theory"
               2000,3.40359897172236,"Database"
               2000,2.73484622275306,"ML-AI"
               2000,3.61479786422578,"Systems"
               2000,2.47934595524957,"Theory"
               1990,2.66461159062885,"Database"
               1990,2.2911172796669,"Theory"
               1990,2.11495807411415,"ML-AI"
               1990,2.74288337924702,"Systems"
               1980,2.26969292389853,"Systems"
               1980,1.82157676348548,"ML-AI"
               1980,2.06085842408712,"Database"
               1980,1.87554449284381,"Theory"
               1970,1.82323232323232,"Systems"
               1970,1.57801899592944,"Theory"
               1970,1.84848484848485,"Database"
               1970,1.79210526315789,"ML-AI"
               1960,1.74603174603175,"ML-AI"
               1960,1.29032258064516,"Theory"
	</result>
</item>
<item>
	<id>q4d</id>
	<question>
	 /*
	  * q4d. calculate the trend of average number of coauthors in each area
	  */
	</question>
	<sql><![CDATA[

        WITH num_author AS
        (SELECT(year/10 *10) AS Decade, COUNT(author) AS auth, I."Area"AS area, I.pubkey
        FROM inproceedings I INNER JOIN authorship A
        ON A.pubkey = I.pubkey
        WHERE I."Area" <> 'Unknown' AND I.year >= 1950
        GROUP BY Decade, I."Area", I.pubkey),

        avgnum AS
        (SELECT N.decade AS decade,AVG(auth) AS avgcoauthor, N.area AS area
        FROM num_author N
        GROUP BY N.area, decade
        ORDER BY N.Decade DESC)

        SELECT area, (count(decade)*sum(decade*avgcoauthor)-sum(decade)*sum(avgcoauthor))/(count(decade)*sum(decade*decade)-sum(decade)*sum(decade)) AS slope
        FROM avgnum
        GROUP BY area
        
	]]></sql>
	<result>
        "ML-AI",0.032078305001287
        "Database",0.057040818426222 
        "Theory",0.030099688410908
        "Systems",0.067869339446566

        Systems had the highest slope
        Theory had the lowest slope

	</result>
</item>
</homework>
